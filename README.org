Emacs editing mode for Ncar Command Language(NCL).


* Installation
- Download the package from the latest release from [[https://github.com/yyr/ncl-mode/tags][here]] or development
version from [[https://github.com/yyr/ncl-mode/downloads][here]]
- unzip/untar put some where in your path (optionally rename it to ncl-mode)
- put the following your .emacs
 : (load "/path/to/downloaded/ncl-mode/ncl-mode-load.el")
- That' it. It will take care of all the needed set up for ncl-mode,
  ncl-doc-mode, auto-complete, yasnippet and inf-ncl. If you care to
  know what are they, then read on.

* ncl.el
ncl.el is forked version of ncl.el by NCL folks. the original version is downloaded from the following link
http://www.ncl.ucar.edu/Applications/Files/ncl-mode.
** Why did I fork?
Parts of the this file has been modified/improved for other files in
this package.

I may rewrite whole ncl.el some day since I would like this package to
be in the core of Emacs or at least in official ELPA. For that to
happen FSF needs copy write papers form all the authors of ncl.el. I
think Its easy to rewrite the mode than collecting the papers from all
the contributors of ncl.el.

BTW, I did send a mail to ncl-list, got no replies/interest.

* ncl-doc.el
Helps you read NCL documentation for NCAR website.

[[https://raw.github.com/yyr/ncl-mode/master/img/ncl-doc-usage.png]]

** Usage:
*** M-x ncl-doc-query-at-point ( C-c C-s )
This function does few things.
   1) It prompts for a string/keyword and collects a given string
   2) It tries to find a URL for the given string
      + if it finds URL for the string call the browser to open that URL
      + If no URL is found, then goes on to search for the given
        string.
      + Displays all search matches in separate buffer category wise.
        In that buffer RET in any search match will call browser for
        take you to that page.
      + If no matches found for a given string it leaves you there

*** M-x ncl-doc-query-open  ( C-c C-o )
Use this function you lets you choose from the all keywords ncl-doc
has in its database and takes you to that page.

To get an idea what ncl-doc does: here I loaded the ncl-doc.el then called
the function "ncl-doc-query-at-point" and given "add" string.

* inf-ncl.el
Which lets you run NCL within Emacs and interact NCL process from
ncl-mode buffer.

* ncl-ctags-gen.sh
one liner to generate ctags from NCL Source files; uses
~exuberant-ctags~
USAGE:
: ncl-ctags-gen.sh /path/to/ncl/files
if no arguments supplied it searches for ncl files in current
directory including sub directories

* Snippets for yasnippet
snippets folder contains ncl-mode snippets.

* Customization:
M-x customize-group RET ncl-doc RET
check out the following variables
 - `ncl-doc-url-base' = defaults to "http://www.ncl.ucar.edu"
   you can change this to any folder if you have downloaded the
   documentation from the NCL website and want read offline.
: (setq ncl-doc-url-base "file:///home/yagnesh/docs/ncl/")

Tip from NCL website FAQ:
:  Is there a way I can download the NCL website documentation so I
:  can access it locally on my machine?
:  TJ Onley pointed out this nice solution. For example, if you just want
:  to download the files under http://www.ncl.ucar.edu/Document, use:
:
:  wget -r -l0  -p -np -nH -k http://www.ncl.ucar.edu/Document/
:
: This will create a directory called "Document", and in that directory,
: you can open the "index.shtml" file with your web browser and have
: access to all the files locally.

 - `ncl-doc-minor-mode-hook'

* TODOS
** NCL MODE
- [ ] REWRITE
- [X] make font lock work better/faster
- [X] Imenu support
  - Imenu can directly be used by keyboard (may be with ido or directly)
  - see function: ncl-add-imenu-menu
- [ ] easy menu
- [ ] fixing commenting system
- [ ] fixing indentation

** NCL-DOC mode
- [X] call browser to look documentation of keyword
- [ ] reading docs with in emacs

** inf-ncl mode
- [X] implement
- [ ] test

** Installation & Setup
put ncl.el folder (which you downloaded) in emacs load path.
#+BEGIN_SRC elisp
(add-to-list 'load-path "/path/to/ncl.el.folder")
(setq auto-mode-alist (cons '("\.ncl$" . ncl-mode) auto-mode-alist))
#+END_SRC

enable ncl-doc for ncl mode

#+BEGIN_SRC elisp
(add-hook 'ncl-mode-hook
          (lambda ()
            (require 'ncl-doc)
            (ncl-doc-minor-mode 1)))
#+END_SRC

you can also look at my configuration for ncl [[https://github.com/yyr/emacsd/blob/master/init-ncl.el][here]]
* License
All the items written by me are GPL v3 or later
